{"version":3,"file":"static/js/971.de8f67f8.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}